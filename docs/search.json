[{"path":"/articles/Loading.html","id":"loading-scrna-seq-or-cite-seq-data","dir":"Articles","previous_headings":"","what":"Loading scRNA-seq or CITE-seq data","title":"Loading data","text":"Upon standard CellRanger pipeline, lot output files. input directory barcodes.tsv.gz, features.tsv.gz matrix.mtx.gz contained. sample_filtered_feature_bc_matrix/ ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz Note, possible Seurat V5, can use following:","code":"library(Seurat) # A vector of outputs of the cellranger pipeline from 10X dir_GEX <- c(   \"/data/SingleCellMQC/CellRanger/TP1/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP2/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/sample_filtered_feature_bc_matrix/\" ) sample_name <- c(\"TP1\", \"TP2\", \"TP3\", \"TP3-rep\")  pbmc <- Read10xData(dir_GEX = dir_GEX, sample = sample_name) pbmc print(object.size(pbmc), units = \"auto\") library(Seurat) library(BPCells)  # A vector of outputs of the cellranger pipeline from 10X dir_GEX <- c(   \"/data/SingleCellMQC/CellRanger/TP1/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP2/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/sample_filtered_feature_bc_matrix/\" ) sample_name <- c(\"TP1\", \"TP2\", \"TP3\", \"TP3-rep\")  pbmc <- Read10xData(dir_GEX = dir_GEX, sample = sample_name, saveBPCell = T, dir_BPCell = \"/data/SingleCellMQC/CellRanger/counts\") pbmc print(object.size(pbmc), units = \"auto\")"},{"path":"/articles/Loading.html","id":"loading-scvdj-seq","dir":"Articles","previous_headings":"","what":"Loading scV(D)J-seq","title":"Loading data","text":"Upon standard CellRanger pipeline, lot output files. input file (scV(D)J-seq) filtered_contig_annotations.csv contained. vdj_out/ ├── filtered_contig_annotations.csv <– contains count data want! ├── clonotypes.csv └── …","code":"library(Seurat) # A vector of outputs of the cellranger pipeline from 10X dir_TCR <- c(   \"/data/SingleCellMQC/CellRanger/TP1/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP2/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/vdj_t/filtered_contig_annotations.csv\" )  sample_name <- c(\"TP1\", \"TP2\", \"TP3\", \"TP3-rep\")  pbmc_tcr <- Read10xData(dir_TCR = dir_TCR, sample = sample_name) pbmc_tcr print(object.size(pbmc_tcr), units = \"auto\")"},{"path":"/articles/Loading.html","id":"loading-scrna-seq-or-cite-seq-data-scvdj-seq","dir":"Articles","previous_headings":"","what":"Loading scRNA-seq or CITE-seq data + scV(D)J-seq","title":"Loading data","text":"Upon standard CellRanger pipeline, lot output files. input directory (scRNA-seq CITE-seq) barcodes.tsv.gz, features.tsv.gz matrix.mtx.gz contained. sample_filtered_feature_bc_matrix/ ├── barcodes.tsv.gz ├── features.tsv.gz └── matrix.mtx.gz input file (scV(D)J-seq) filtered_contig_annotations.csv also contained. vdj_out/ ├── filtered_contig_annotations.csv <– contains count data want! ├── clonotypes.csv └── … Note, possible Seurat V5, can use following: Starting rliger 2.0.0, dimensionality reduction matrices stored cell metadata, can accessed cellMeta(bmmcLiger). Use argument dimredName specify unique variable names result can enable storing multiple low-dimensional representation matrices variables time.","code":"library(Seurat)  # A vector of outputs of the cellranger pipeline from 10X sample_name <- c(\"TP1\", \"TP2\", \"TP3\", \"TP3-rep\")  dir_GEX <- c(   \"/data/SingleCellMQC/CellRanger/TP1/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP2/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/sample_filtered_feature_bc_matrix/\" )  dir_TCR <- c(   \"/data/SingleCellMQC/CellRanger/TP1/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP2/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/vdj_t/filtered_contig_annotations.csv\" )  dir_BCR <- c(   \"/data/SingleCellMQC/CellRanger/TP1/vdj_b/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP2/vdj_b/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3/vdj_b/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/vdj_b/filtered_contig_annotations.csv\" )  pbmc <- Read10xData(dir_GEX = dir_GEX, dir_TCR = dir_TCR, dir_BCR = dir_BCR, sample = sample_name)  ## Reduce memory by using BPCells # pbmc <- Read10xData(dir_GEX = dir_GEX, dir_TCR = dir_TCR, dir_BCR = dir_BCR, sample = sample_name, saveBPCell = T, dir_BPCell = \"/data/SingleCellMQC/CellRanger/counts\")  pbmc print(object.size(pbmc), units = \"auto\") library(Seurat) library(BPCells)  # A vector of outputs of the cellranger pipeline from 10X sample_name <- c(\"TP1\", \"TP2\", \"TP3\", \"TP3-rep\")  dir_GEX <- c(   \"/data/SingleCellMQC/CellRanger/TP1/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP2/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3/sample_filtered_feature_bc_matrix/\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/sample_filtered_feature_bc_matrix/\" )  dir_TCR <- c(   \"/data/SingleCellMQC/CellRanger/TP1/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP2/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3/vdj_t/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/vdj_t/filtered_contig_annotations.csv\" )  dir_BCR <- c(   \"/data/SingleCellMQC/CellRanger/TP1/vdj_b/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP2/vdj_b/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3/vdj_b/filtered_contig_annotations.csv\",   \"/data/SingleCellMQC/CellRanger/TP3-rep/vdj_b/filtered_contig_annotations.csv\" )   pbmc <- Read10xData(dir_GEX = dir_GEX, dir_TCR = dir_TCR, dir_BCR = dir_BCR,                     sample = sample_name, saveBPCell = T, dir_BPCell = \"/data/SingleCellMQC/CellRanger/counts_multi\") pbmc print(object.size(pbmc), units = \"auto\")"},{"path":"/articles/lq_detection.html","id":"detecting-low-quality-cells","dir":"Articles","previous_headings":"","what":"Detecting Low quality cells","title":"Low quality detection","text":"","code":"library(Seurat) #loadding data pbmc <- readRDS(\"E:/single_cell_multi/outplot/data0.rds\")  ## Detecting Low quality cells by `mad`, `miQC`, `ddqc` and `sd` methods  ## split by batches pbmc <- runLowQuality(pbmc, add.Seurat = T, methods = c(\"mad\", \"miQC\", \"ddqc\") , split.by = \"Batch_EXP\" )"},{"path":"/articles/lq_detection.html","id":"for-example-detecting-low-quality-cells-by-mad","dir":"Articles","previous_headings":"Detecting Low quality cells","what":"For example: Detecting Low quality cells by mad","title":"Low quality detection","text":"want detect lq cells different batches?","code":"##Detecting Low quality cells by `mad` pbmc <- runLowQuality.mad(pbmc, add.Seurat = T,  nmads = 3) ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T,  nmads = 3, methods= \"mad\" ) ##Detecting Low quality cells by `mad` pbmc <- runLowQuality.mad(pbmc, add.Seurat = T,  nmads = 3, split.by = \"Batch_EXP\", share.mad=T) ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T,  nmads = 3, methods= \"mad\", split.by=\"Batch_EXP\" , share.mad=T)"},{"path":"/articles/lq_detection.html","id":"for-example-detecting-low-quality-cells-by-sd","dir":"Articles","previous_headings":"Detecting Low quality cells","what":"For example: Detecting Low quality cells by sd","title":"Low quality detection","text":"want detect lq cells different batches?","code":"##Detecting Low quality cells by `mad` pbmc <- runLowQuality.sd(pbmc, add.Seurat = T,  nsds  = 3) ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T,  nsds = 3, methods= \"sd\" ) ##Detecting Low quality cells by `mad` pbmc <- runLowQuality.sd(pbmc, add.Seurat = T,  nsds  = 3, split.by = \"Batch_EXP\", share.sd =T) ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T,  nsds = 3, methods= \"sd\" ,split.by = \"Batch_EXP\", share.sd =T)"},{"path":"/articles/lq_detection.html","id":"for-example-detecting-low-quality-cells-by-miqc","dir":"Articles","previous_headings":"Detecting Low quality cells","what":"For example: Detecting Low quality cells by miQC","title":"Low quality detection","text":"want detect lq cells different batches?","code":"##Detecting Low quality cells by `mad` pbmc <- runLowQuality.miQC(pbmc, add.Seurat = T) ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T, methods= \"miQC\" ) ##Detecting Low quality cells by `mad` pbmc <- runLowQuality.miQC(pbmc, add.Seurat = T, split.by = \"Batch_EXP\") ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T, methods= \"miQC\" , split.by = \"Batch_EXP\")"},{"path":"/articles/lq_detection.html","id":"for-example-detecting-low-quality-cells-by-ddqc","dir":"Articles","previous_headings":"Detecting Low quality cells","what":"For example: Detecting Low quality cells by ddqc","title":"Low quality detection","text":"","code":"##Detecting Low quality cells by `mad` pbmc <- runLowQuality.ddqc(pbmc, add.Seurat = T) ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T,  nmads = 3, methods= \"mad\" ) ##Detecting Low quality cells by `mad` pbmc <- runLowQuality.ddqc(pbmc, add.Seurat = T, split.by = \"Batch_EXP\") ## or  ## pbmc <- runLowQuality(pbmc, add.Seurat = T,  methods= \"ddqc\", split.by = \"Batch_EXP\" )"},{"path":"/articles/runMetrics.html","id":"calculating-sample-cell-and-geneprotein-qc-metrics","dir":"Articles","previous_headings":"","what":"Calculating sample, cell and gene/protein QC metrics","title":"Calculating QC metrics","text":"output Seurat object. results stored meta.data SingleCelMQC$perQCMetrics slot misc. nCell — Total number cells captured sample. nGene_RNA — Number genes detected sample. nPro_ADT — Number protein targets quantified antibody-derived tags (ADT) sample. nChain_TCR — Total number T-cell receptor (TCR) chains detected sample. nCell_TCR — Number cells detected TCR chains sample. TCR% — Percentage cells detected TCR chains relative total cells sample. nChain_BCR — Total number B-cell receptor (BCR) chains detected sample. nCell_BCR — Number cells detected BCR chains sample. BCR% — Percentage cells detected BCR chains relative total cells sample. nChain_TRA — Total number TCR alpha chains detected sample. nCell_TRA — Number cells detected TCR alpha chains sample. TRA% — Percentage cells detected TCR alpha chains relative total cells sample. nChain_TRB — Total number TCR beta chains detected sample. nCell_TRB — Number cells detected TCR beta chains sample. TRB% — Percentage cells detected TCR beta chains relative total cells sample. nChain_IGH — Total number immunoglobulin heavy (IGH) chains detected sample. nCell_IGH — Number cells detected IGH chains sample. IGH% — Percentage cells detected IGH chains relative total cells sample. nChain_IGK — Total number immunoglobulin kappa (IGK) light chains detected sample. nCell_IGK — Number cells detected IGK chains sample. IGK% — Percentage cells detected IGK chains relative total cells sample. nChain_IGL — Total number immunoglobulin lambda (IGL) light chains detected sample. nCell_IGL — Number cells detected IGL chains sample. IGL% — Percentage cells detected IGL chains relative total cells sample. IGH + IGK — Total number cells detected IGH IGK chains. IGH + IGL — Total number cells detected IGH IGL chains. TRA + TRB — Total number cells detected TRA TRB chains. ambiguous_TB — Number cells TCR BCR chains detection. multichain_B — Number cells multiple BCR chains detected (2 IGH chains /2 IGK/L chains). multichain_T — Number cells multiple TCR chains detected (2 TRA chains /2 TRB chains). single IGH — Number cells single detected IGH chain. single IGK — Number cells single detected IGK chain. single IGL — Number cells single detected IGL chain. single TRA — Number cells single detected TRA chain. single TRB — Number cells single detected TRB chain. IGH + IGK% — Percentage cells IGH IGK chains relative total cells. IGH + IGL% — Percentage cells IGH IGL chains relative total cells. TRA + TRB% — Percentage cells TRA TRB chains relative total cells. ambiguous_TB% — Percentage cells TCR BCR chains detection relative total cells. multichain_B% — Percentage cells multiple BCR chains (2 IGH chains /2 IGK/L chains) relative total cells. multichain_T% — Percentage cells multiple TCR chains (2 TRA chains /2 TRB chains) relative total cells. single IGH% — Percentage cells single IGH chain relative total cells. single IGK% — Percentage cells single IGK chain relative total cells. single IGL% — Percentage cells single IGL chain relative total cells. single TRA% — Percentage cells single TRA chain relative total cells. single TRB% — Percentage cells single TRB chain relative total cells. nCount_RNA — Total number unique molecular identifiers (UMIs) detected cell. nFeature_RNA — Number unique genes detected cell. nCount_ADT — Total number unique molecular identifiers (UMIs) associated antibody-derived tags cell. nFeature_ADT — Number unique ADT features detected cell. percent.mt — Percentage mitochondrial transcripts total RNA transcripts cell. percent.rb — Percentage ribosomal transcripts total RNA transcripts cell. percent.hb — Percentage hemoglobin transcripts total RNA transcripts cell. percent.dissociation — Percentage dissociation-related transcripts total RNA transcripts cell. per_feature_count_RNA — Average number UMIs per gene cell. per_feature_count_ADT — Average number UMIs per ADT feature cell. percent.isotype — Percentage isotype control antibodies total ADTs cell. nCell — Number cells particular feature (e.g., gene protein) detected. pct — Percentage cells particular feature detected, relative total number cells analyzed. mean — Average expression level feature (e.g., gene protein) across cells detected. variance — Statistical measure dispersion feature’s expression levels across cells variance.standardized — Standardized variance feature’s expression levels across cells.","code":"library(Seurat) #loadding data pbmc <- readRDS(\"E:/single_cell_multi/outplot/data0.rds\")  #Calculating QC metrics  pbmc <- runMetrics(pbmc) pbmc ## An object of class Seurat  ## 28470 features across 28498 samples within 2 assays  ## Active assay: RNA (28333 features, 0 variable features) ##  1 layer present: counts ##  1 other assay present: ADT str(pbmc@misc$SingleCellMQC$perQCMetrics) ## List of 3 ##  $ perCell   :'data.frame':  28498 obs. of  22 variables: ##   ..$ orig.ident           : chr [1:28498] \"TP1\" \"TP1\" \"TP1\" \"TP1\" ... ##   ..$ nCount_RNA           : num [1:28498] 4013 8114 4322 3591 5622 ... ##   ..$ nFeature_RNA         : int [1:28498] 1658 3201 1904 1371 2176 1559 4537 3298 1537 2158 ... ##   ..$ nCount_ADT           : num [1:28498] 887 2896 633 1265 1182 ... ##   ..$ nFeature_ADT         : int [1:28498] 103 127 85 98 109 103 125 132 105 125 ... ##   ..$ percent.mt           : num [1:28498] 2.12 1.44 3.98 2.31 1.85 ... ##   ..$ percent.rb           : num [1:28498] 21.9 16 15.6 31.2 23 ... ##   ..$ percent.hb           : num [1:28498] 0 0 0 0 0.0178 ... ##   ..$ percent.dissociation : num [1:28498] 2.517 1.75 0.509 1.782 1.476 ... ##   ..$ per_feature_count_RNA: num [1:28498] 2.42 2.53 2.27 2.62 2.58 ... ##   ..$ per_feature_count_ADT: num [1:28498] 8.61 22.8 7.45 12.91 10.84 ... ##   ..$ percent.isotype      : num [1:28498] 0.902 0.345 0.474 0.553 0.677 ... ##   ..$ nChain_TCR           : int [1:28498] 2 NA NA 2 1 3 NA NA 2 NA ... ##   ..$ receptor_type        : chr [1:28498] \"TCR\" NA NA \"TCR\" ... ##   ..$ receptor_subtype     : chr [1:28498] \"TRA + TRB\" NA NA \"TRA + TRB\" ... ##   ..$ chain_pair           : chr [1:28498] \"double pair\" NA NA \"double pair\" ... ##   ..$ nChain_TRA           : int [1:28498] 1 NA NA 1 0 2 NA NA 1 NA ... ##   ..$ nChain_TRB           : int [1:28498] 1 NA NA 1 1 1 NA NA 1 NA ... ##   ..$ nChain_BCR           : int [1:28498] NA NA NA NA NA NA NA NA NA NA ... ##   ..$ nChain_IGH           : int [1:28498] NA NA NA NA NA NA NA NA NA NA ... ##   ..$ nChain_IGK           : int [1:28498] NA NA NA NA NA NA NA NA NA NA ... ##   ..$ nChain_IGL           : int [1:28498] NA NA NA NA NA NA NA NA NA NA ... ##  $ perSample :List of 2 ##   ..$ count  :'data.frame':  4 obs. of  47 variables: ##   .. ..$ sample       : chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. ..$ nCell        : int [1:4] 10136 9063 3697 5602 ##   .. ..$ nGene_RNA    : int [1:4] 25320 25779 23445 24468 ##   .. ..$ nPro_ADT     : int [1:4] 137 137 137 137 ##   .. ..$ nChain_TCR   : int [1:4] 5360 4271 695 2883 ##   .. ..$ nCell_TCR    : int [1:4] 2752 2270 408 1645 ##   .. ..$ TCR%         : num [1:4] 27.2 25 11 29.4 ##   .. ..$ nChain_TRA   : int [1:4] 2581 1976 289 1251 ##   .. ..$ nCell_TRA    : int [1:4] 2384 1852 274 1190 ##   .. ..$ TRA%         : num [1:4] 23.52 20.43 7.41 21.24 ##   .. ..$ nChain_TRB   : int [1:4] 2779 2295 406 1632 ##   .. ..$ nCell_TRB    : int [1:4] 2709 2241 401 1610 ##   .. ..$ TRB%         : num [1:4] 26.7 24.7 10.8 28.7 ##   .. ..$ nChain_BCR   : int [1:4] 1110 2061 1538 1371 ##   .. ..$ nCell_BCR    : int [1:4] 542 1014 773 679 ##   .. ..$ BCR%         : num [1:4] 5.35 11.19 20.91 12.12 ##   .. ..$ nChain_IGH   : int [1:4] 542 1009 749 671 ##   .. ..$ nCell_IGH    : int [1:4] 534 992 743 663 ##   .. ..$ IGH%         : num [1:4] 5.27 10.95 20.1 11.84 ##   .. ..$ nChain_IGK   : int [1:4] 352 632 503 422 ##   .. ..$ nCell_IGK    : int [1:4] 338 611 494 411 ##   .. ..$ IGK%         : num [1:4] 3.33 6.74 13.36 7.34 ##   .. ..$ nChain_IGL   : int [1:4] 216 420 286 278 ##   .. ..$ nCell_IGL    : int [1:4] 210 405 273 267 ##   .. ..$ IGL%         : num [1:4] 2.07 4.47 7.38 4.77 ##   .. ..$ IGH + IGK    : int [1:4] 289 541 451 365 ##   .. ..$ IGH + IGL    : int [1:4] 176 343 235 230 ##   .. ..$ TRA + TRB    : int [1:4] 2071 1631 243 1064 ##   .. ..$ ambiguous_TB : int [1:4] 32 44 11 25 ##   .. ..$ multichain_B : int [1:4] 33 53 33 34 ##   .. ..$ multichain_T : int [1:4] 241 162 19 77 ##   .. ..$ single IGH   : int [1:4] 5 12 14 9 ##   .. ..$ single IGK   : int [1:4] 4 11 16 8 ##   .. ..$ single IGL   : int [1:4] 3 10 13 8 ##   .. ..$ single TRA   : int [1:4] 43 29 7 34 ##   .. ..$ single TRB   : int [1:4] 365 404 128 445 ##   .. ..$ IGH + IGK%   : num [1:4] 2.85 5.97 12.2 6.52 ##   .. ..$ IGH + IGL%   : num [1:4] 1.74 3.79 6.36 4.11 ##   .. ..$ TRA + TRB%   : num [1:4] 20.43 18 6.57 18.99 ##   .. ..$ ambiguous_TB%: num [1:4] 0.316 0.485 0.298 0.446 ##   .. ..$ multichain_B%: num [1:4] 0.326 0.585 0.893 0.607 ##   .. ..$ multichain_T%: num [1:4] 2.378 1.787 0.514 1.375 ##   .. ..$ single IGH%  : num [1:4] 0.049 0.132 0.379 0.161 ##   .. ..$ single IGK%  : num [1:4] 0.039 0.121 0.433 0.143 ##   .. ..$ single IGL%  : num [1:4] 0.03 0.11 0.352 0.143 ##   .. ..$ single TRA%  : num [1:4] 0.424 0.32 0.189 0.607 ##   .. ..$ single TRB%  : num [1:4] 3.6 4.46 3.46 7.94 ##   ..$ summary:List of 10 ##   .. ..$ nCount_RNA           :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 3164 2434 1280 2781 ##   .. .. ..$ 3rd Qu: num [1:4] 5288 4812 4255 5241 ##   .. .. ..$ Max   : num [1:4] 39053 30062 38148 51876 ##   .. .. ..$ Mean  : num [1:4] 4668 3971 2980 4334 ##   .. .. ..$ Median: num [1:4] 3990 3627 2079 4042 ##   .. .. ..$ Min   : num [1:4] 504 502 501 503 ##   .. ..$ nFeature_RNA         :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 1400 1160 511 1251 ##   .. .. ..$ 3rd Qu: num [1:4] 2058 1908 1697 1953 ##   .. .. ..$ Max   : num [1:4] 6762 5918 5720 7240 ##   .. .. ..$ Mean  : num [1:4] 1803 1587 1135 1631 ##   .. .. ..$ Median: num [1:4] 1680 1547 965 1642 ##   .. .. ..$ Min   : num [1:4] 34 37 37 36 ##   .. ..$ nCount_ADT           :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 873 530 949 1088 ##   .. .. ..$ 3rd Qu: num [1:4] 2164 1306 1773 2157 ##   .. .. ..$ Max   : num [1:4] 84059 30648 30675 35188 ##   .. .. ..$ Mean  : num [1:4] 1943 1174 1721 1919 ##   .. .. ..$ Median: num [1:4] 1253 752 1260 1476 ##   .. .. ..$ Min   : num [1:4] 30 27 13 50 ##   .. ..$ nFeature_ADT         :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 100 95 113 110 ##   .. .. ..$ 3rd Qu: num [1:4] 120 115 125 124 ##   .. .. ..$ Max   : num [1:4] 137 137 137 137 ##   .. .. ..$ Mean  : num [1:4] 109 105 119 117 ##   .. .. ..$ Median: num [1:4] 108 103 119 116 ##   .. .. ..$ Min   : num [1:4] 23 22 11 29 ##   .. ..$ percent.mt           :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 1.39 1.8 4.37 1.35 ##   .. .. ..$ 3rd Qu: num [1:4] 3.19 4.92 22.46 3.29 ##   .. .. ..$ Max   : num [1:4] 97.5 94.9 97.3 94.5 ##   .. .. ..$ Mean  : num [1:4] 3.22 5.45 18.91 3.81 ##   .. .. ..$ Median: num [1:4] 2.18 2.73 9.63 2.02 ##   .. .. ..$ Min   : num [1:4] 0 0 0 0 ##   .. ..$ percent.rb           :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 15.66 10.41 1.15 13.76 ##   .. .. ..$ 3rd Qu: num [1:4] 25.6 27.2 23.6 28 ##   .. .. ..$ Max   : num [1:4] 52.6 53 53.4 55.7 ##   .. .. ..$ Mean  : num [1:4] 20.9 19.1 12.2 20.3 ##   .. .. ..$ Median: num [1:4] 20.07 18.72 5.82 20.61 ##   .. .. ..$ Min   : num [1:4] 0 0 0 0 ##   .. ..$ percent.hb           :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 0 0 0 0 ##   .. .. ..$ 3rd Qu: num [1:4] 0 0 0 0 ##   .. .. ..$ Max   : num [1:4] 0.366 90.759 0.27 0.212 ##   .. .. ..$ Mean  : num [1:4] 0.006 0.02486 0.00478 0.00504 ##   .. .. ..$ Median: num [1:4] 0 0 0 0 ##   .. .. ..$ Min   : num [1:4] 0 0 0 0 ##   .. ..$ percent.dissociation :'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 1.197 0.818 0.605 1.301 ##   .. .. ..$ 3rd Qu: num [1:4] 2.39 2.23 1.65 3.54 ##   .. .. ..$ Max   : num [1:4] 7.98 8.9 7.99 11.66 ##   .. .. ..$ Mean  : num [1:4] 1.86 1.61 1.28 2.61 ##   .. .. ..$ Median: num [1:4] 1.76 1.4 1.02 2.33 ##   .. .. ..$ Min   : num [1:4] 0 0 0 0 ##   .. ..$ per_feature_count_RNA:'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 2.15 2.05 2.04 2.17 ##   .. .. ..$ 3rd Qu: num [1:4] 2.7 2.64 3.02 2.82 ##   .. .. ..$ Max   : num [1:4] 29.2 16.5 32.3 57.2 ##   .. .. ..$ Mean  : num [1:4] 2.47 2.41 3.01 2.55 ##   .. .. ..$ Median: num [1:4] 2.39 2.33 2.45 2.45 ##   .. .. ..$ Min   : num [1:4] 1.24 1.26 1.36 1.22 ##   .. ..$ per_feature_count_ADT:'data.frame': 4 obs. of  7 variables: ##   .. .. ..$ sample: chr [1:4] \"TP1\" \"TP2\" \"TP3\" \"TP3-rep\" ##   .. .. ..$ 1st Qu: num [1:4] 8.67 5.52 8.26 9.73 ##   .. .. ..$ 3rd Qu: num [1:4] 18.3 11.5 14.5 17.8 ##   .. .. ..$ Max   : num [1:4] 614 224 224 258 ##   .. .. ..$ Mean  : num [1:4] 16.5 10.3 14 15.8 ##   .. .. ..$ Median: num [1:4] 11.77 7.39 10.64 12.75 ##   .. .. ..$ Min   : num [1:4] 1.21 1.08 1.18 1.72 ##  $ perFeature:List of 2 ##   ..$ RNA:'data.frame':  28333 obs. of  6 variables: ##   .. ..$ Feature              : chr [1:28333] \"AL627309.1\" \"AL627309.2\" \"AL627309.5\" \"AP006222.2\" ... ##   .. ..$ nCell                : int [1:28333] 182 2 329 9 1 412 12 1331 579 3 ... ##   .. ..$ pct                  : num [1:28333] 6.39e-03 7.02e-05 1.15e-02 3.16e-04 3.51e-05 ... ##   .. ..$ mean                 : num [1:28333] 6.56e-03 7.02e-05 1.19e-02 3.16e-04 3.51e-05 ... ##   .. ..$ variance             : num [1:28333] 6.94e-03 7.02e-05 1.25e-02 3.16e-04 3.51e-05 ... ##   .. ..$ variance.standardized: num [1:28333] 0.864 0.966 0.832 0.908 1 ... ##   ..$ ADT:'data.frame':  137 obs. of  6 variables: ##   .. ..$ Feature              : chr [1:137] \"Hu.CD101\" \"Hu.CD103\" \"Hu.CD105-43A3\" \"Hu.CD107a\" ... ##   .. ..$ nCell                : int [1:137] 25479 17787 19284 24901 27746 26123 28435 23871 19722 25704 ... ##   .. ..$ pct                  : num [1:137] 0.894 0.624 0.677 0.874 0.974 ... ##   .. ..$ mean                 : num [1:137] 7.74 1.78 2.17 6.32 6.73 ... ##   .. ..$ variance             : num [1:137] 169 55.5 26.5 211.4 121.2 ... ##   .. ..$ variance.standardized: num [1:137] 1.191 3.335 1.001 1.654 0.935 ... colnames(pbmc@meta.data) ##  [1] \"orig.ident\"            \"nCount_RNA\"            \"nFeature_RNA\"          ##  [4] \"nCount_ADT\"            \"nFeature_ADT\"          \"percent.mt\"            ##  [7] \"percent.rb\"            \"percent.hb\"            \"percent.dissociation\"  ## [10] \"per_feature_count_RNA\" \"per_feature_count_ADT\" \"percent.isotype\"       ## [13] \"nChain_TCR\"            \"receptor_type\"         \"receptor_subtype\"      ## [16] \"chain_pair\"            \"nChain_TRA\"            \"nChain_TRB\"            ## [19] \"nChain_BCR\"            \"nChain_IGH\"            \"nChain_IGK\"            ## [22] \"nChain_IGL\""},{"path":"/articles/test.html","id":"vignette-info","dir":"Articles","previous_headings":"","what":"Vignette Info","title":"Vignette Title","text":"Note various macros within vignette section metadata block . required order instruct R build vignette. Note change title field \\VignetteIndexEntry match title vignette.","code":""},{"path":"/articles/test.html","id":"styles","dir":"Articles","previous_headings":"","what":"Styles","title":"Vignette Title","text":"html_vignette template includes basic CSS theme. override theme can specify CSS document metadata follows:","code":"output:    rmarkdown::html_vignette:     css: mystyles.css"},{"path":"/articles/test.html","id":"figures","dir":"Articles","previous_headings":"","what":"Figures","title":"Vignette Title","text":"figure sizes customised can easily put two images side--side.  can enable figure captions fig_caption: yes YAML: can use chunk option fig.cap = \"figure caption.\" knitr.","code":"plot(1:10) plot(10:1) print(R.utils::getAbsolutePath(getwd())) #> [1] \"F:/R_package_test/test/test1/vignettes\" print(R.utils::getAbsolutePath( \"./\"  ) ) #> [1] \"F:/R_package_test/test/test1/vignettes\" print(R.utils::getAbsolutePath( \"/R_package_test/test/test1/\"  ) ) #> [1] \"/R_package_test/test/test1\" a <- readRDS(\"/R_package_test/test/test1/a.rds\" ) print(a) #> [1] 123456 output:   rmarkdown::html_vignette:     fig_caption: yes"},{"path":"/articles/test.html","id":"more-examples","dir":"Articles","previous_headings":"","what":"More Examples","title":"Vignette Title","text":"can write math expressions, e.g. \\(Y = X\\beta + \\epsilon\\), footnotes1, tables, e.g. using knitr::kable(). Also quote using >: “gives [code] safety [code] speed deserves neither.” (via)","code":""},{"path":"/articles/test1.html","id":"vignette-info","dir":"Articles","previous_headings":"","what":"Vignette Info","title":"Vignette Title","text":"Note various macros within vignette section metadata block . required order instruct R build vignette. Note change title field \\VignetteIndexEntry match title vignette.","code":""},{"path":"/articles/test1.html","id":"styles","dir":"Articles","previous_headings":"","what":"Styles","title":"Vignette Title","text":"html_vignette template includes basic CSS theme. override theme can specify CSS document metadata follows:","code":"output:    rmarkdown::html_vignette:     css: mystyles.css"},{"path":"/articles/test1.html","id":"figures","dir":"Articles","previous_headings":"","what":"Figures","title":"Vignette Title","text":"figure sizes customised can easily put two images side--side.  can enable figure captions fig_caption: yes YAML: can use chunk option fig.cap = \"figure caption.\" knitr.","code":"plot(1:10) plot(10:1) print(R.utils::getAbsolutePath(getwd())) #> [1] \"E:/R_package_test/test/test1/vignettes\" output:   rmarkdown::html_vignette:     fig_caption: yes"},{"path":"/articles/test1.html","id":"more-examples","dir":"Articles","previous_headings":"","what":"More Examples","title":"Vignette Title","text":"can write math expressions, e.g. \\(Y = X\\beta + \\epsilon\\), footnotes1, tables, e.g. using knitr::kable(). Also quote using >: “gives [code] safety [code] speed deserves neither.” (via)","code":""},{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"package maintainer. Maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Ww (2025). test1: Package (Title Case). R package version 0.1.0.","code":"@Manual{,   title = {test1: What the Package Does (Title Case)},   author = {Who wrote it},   year = {2025},   note = {R package version 0.1.0}, }"},{"path":"/reference/hello.html","id":null,"dir":"Reference","previous_headings":"","what":"Hello, World! — hello","title":"Hello, World! — hello","text":"Prints 'Hello, world!'.","code":""},{"path":"/reference/hello.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Hello, World! — hello","text":"","code":"hello()"},{"path":"/reference/hello.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Hello, World! — hello","text":"","code":"hello() #> Error in hello(): could not find function \"hello\""}]
